name: Auto-Merge-PRs

on:
  pull_request_target:
    types: [opened, synchronize]
    branches:
      - main

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write

    steps:
      # Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 2

      - name: Merge PR
        id: mergepr
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            try {
              // Attempt to merge the pull request using the squash method
              const response = await github.rest.pulls.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.issue.number,
                merge_method: "squash"
              })

              // Check if the merge was successful by checking the status code of the response
              if (response.status === 200) {
                const happyCelebrationsGifs = [
                  "https://i.imgur.com/MigSwFi.gif",
                  "https://media.tenor.com/vH8aIdO0YI4AAAAM/anime-kantai-collection.gif",
                  "https://media.tenor.com/U0s8K6yJbPkAAAAM/afl-australian-rules.gif",
                  "https://i.pinimg.com/originals/81/89/5a/81895a1491ee05919842558d867c6143.gif",
                  "https://media.tenor.com/RxGETpJZvusAAAAM/luigi-you-win.gif",
                  "https://media.tenor.com/PKsK8zJ-xbQAAAAM/gears-of-war-hug.gif",
                  "https://i.pinimg.com/originals/56/d9/c3/56d9c3fd6524357656ae3b3b39d7ab66.gif",
                  "https://i.pinimg.com/originals/7c/2c/5d/7c2c5df25e6b7935025dca16e6571d11.gif"
                ]

                const getRandomGif = () => happyCelebrationsGifs[Math.floor(Math.random() * happyCelebrationsGifs.length)]
                const getMergeMessage = (username) => {
                  const greeting = `Excelente @${username}, ¡Felicidades! Tu has hecho tu proyecto e hiciste el Pull Request de manera asombrosa. 🎉 😊🏆`;
                  const gif = `![celebration gif](${getRandomGif()})`;
                  return `${greeting}\n\n${gif}`;
                }

                // Generate the merge message using the getMergeMessage function
                const message = getMergeMessage(context.payload.pull_request.user.login);

                // Post a comment
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.issue.number,
                  body: message
                })
              }
            } catch (error) {
              console.error(`Error merging pull request: ${error}`)
            }

      - name: Deploy to production
        if: github.ref == 'refs/heads/main'
        run: |
          echo "Starting deployment to production..."
          # Add your deployment commands here
          # For example, you might use SSH to connect to a server and run deployment scripts
          # ssh user@yourserver.com 'bash -s' < deploy-script.sh
          echo "Deployment complete."
